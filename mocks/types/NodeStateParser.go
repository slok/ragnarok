// Code generated by mockery v1.0.0
package types

import mock "github.com/stretchr/testify/mock"
import nodestatus "github.com/slok/ragnarok/grpc/nodestatus"
import types "github.com/slok/ragnarok/types"

// NodeStateParser is an autogenerated mock type for the NodeStateParser type
type NodeStateParser struct {
	mock.Mock
}

// PBToNodeState provides a mock function with given fields: state
func (_m *NodeStateParser) PBToNodeState(state nodestatus.State) (types.NodeState, error) {
	ret := _m.Called(state)

	var r0 types.NodeState
	if rf, ok := ret.Get(0).(func(nodestatus.State) types.NodeState); ok {
		r0 = rf(state)
	} else {
		r0 = ret.Get(0).(types.NodeState)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(nodestatus.State) error); ok {
		r1 = rf(state)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StrToNodeState provides a mock function with given fields: state
func (_m *NodeStateParser) StrToNodeState(state string) (types.NodeState, error) {
	ret := _m.Called(state)

	var r0 types.NodeState
	if rf, ok := ret.Get(0).(func(string) types.NodeState); ok {
		r0 = rf(state)
	} else {
		r0 = ret.Get(0).(types.NodeState)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(state)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
