// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nodestatus/nodestatus.proto

/*
Package nodestatus is a generated protocol buffer package.

It is generated from these files:
	nodestatus/nodestatus.proto

It has these top-level messages:
	RegisteredResponse
	Node
*/
package nodestatus

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisteredResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *RegisteredResponse) Reset()                    { *m = RegisteredResponse{} }
func (m *RegisteredResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisteredResponse) ProtoMessage()               {}
func (*RegisteredResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RegisteredResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Node struct {
	Id   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Tags map[string]string `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisteredResponse)(nil), "nodestatus.RegisteredResponse")
	proto.RegisterType((*Node)(nil), "nodestatus.Node")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeStatus service

type NodeStatusClient interface {
	Register(ctx context.Context, in *Node, opts ...grpc.CallOption) (*RegisteredResponse, error)
}

type nodeStatusClient struct {
	cc *grpc.ClientConn
}

func NewNodeStatusClient(cc *grpc.ClientConn) NodeStatusClient {
	return &nodeStatusClient{cc}
}

func (c *nodeStatusClient) Register(ctx context.Context, in *Node, opts ...grpc.CallOption) (*RegisteredResponse, error) {
	out := new(RegisteredResponse)
	err := grpc.Invoke(ctx, "/nodestatus.NodeStatus/Register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NodeStatus service

type NodeStatusServer interface {
	Register(context.Context, *Node) (*RegisteredResponse, error)
}

func RegisterNodeStatusServer(s *grpc.Server, srv NodeStatusServer) {
	s.RegisterService(&_NodeStatus_serviceDesc, srv)
}

func _NodeStatus_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeStatusServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodestatus.NodeStatus/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeStatusServer).Register(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeStatus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodestatus.NodeStatus",
	HandlerType: (*NodeStatusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _NodeStatus_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nodestatus/nodestatus.proto",
}

func init() { proto.RegisterFile("nodestatus/nodestatus.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xce, 0xcb, 0x4f, 0x49,
	0x2d, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0xd6, 0x47, 0x30, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85,
	0xb8, 0x10, 0x22, 0x4a, 0x7a, 0x5c, 0x42, 0x41, 0xa9, 0xe9, 0x99, 0xc5, 0x25, 0xa9, 0x45, 0xa9,
	0x29, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0xa9, 0xc5,
	0xc5, 0x89, 0xe9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x52, 0x3d, 0x17,
	0x8b, 0x5f, 0x7e, 0x4a, 0xaa, 0x10, 0x1f, 0x17, 0x53, 0x66, 0x0a, 0x54, 0x92, 0x29, 0x33, 0x45,
	0x48, 0x8f, 0x8b, 0xa5, 0x24, 0x31, 0xbd, 0x58, 0x82, 0x49, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x4a,
	0x0f, 0xc9, 0x52, 0x90, 0x7a, 0xbd, 0x90, 0xc4, 0xf4, 0x62, 0xd7, 0xbc, 0x92, 0xa2, 0xca, 0x20,
	0xb0, 0x3a, 0x29, 0x73, 0x2e, 0x4e, 0xb8, 0x90, 0x90, 0x00, 0x17, 0x73, 0x76, 0x6a, 0x25, 0xd4,
	0x34, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31, 0xa7, 0x34, 0x55, 0x82, 0x09, 0x2c, 0x06,
	0xe1, 0x58, 0x31, 0x59, 0x30, 0x1a, 0xf9, 0x70, 0x71, 0x81, 0x0c, 0x0c, 0x06, 0x9b, 0x2d, 0x64,
	0xc7, 0xc5, 0x01, 0x73, 0xbe, 0x90, 0x00, 0xba, 0xa5, 0x52, 0x72, 0xc8, 0x22, 0x98, 0xde, 0x54,
	0x62, 0x48, 0x62, 0x03, 0x87, 0x88, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x72, 0xc0, 0x5f, 0x44,
	0x30, 0x01, 0x00, 0x00,
}
